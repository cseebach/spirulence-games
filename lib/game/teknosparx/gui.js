// Generated by CoffeeScript 1.3.3
(function() {

  ig.module("game.teknosparx.gui").requires("impact.impact").defines(function() {
    window.MouseArea = ig.Class.extend({
      init: function(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        return this.height = height;
      },
      onClicked: function() {},
      update: function() {
        var mouseX, mouseY;
        this.hovered = false;
        mouseX = ig.input.mouse.x;
        mouseY = ig.input.mouse.y;
        if (mouseX > this.x && mouseY > this.y) {
          if (mouseX < this.x + this.width && mouseY < this.y + this.height) {
            this.hovered = true;
            if (ig.input.released("primary_button") || ig.input.pressed("primary_button")) {
              if (!ig.game._mouseIntercepted) {
                ig.game.mouseIntercepted();
                return this.onClicked();
              }
            }
          }
        }
      },
      draw: function() {}
    });
    window.Panel = window.MouseArea.extend({
      init: function(x, y, image) {
        this.image = image;
        return this.parent(x, y, image.width, image.height);
      },
      draw: function() {
        return this.image.draw(this.x, this.y);
      }
    });
    return window.Button = window.MouseArea.extend({
      init: function(x, y, image, text, font) {
        this.imageTileWidth = image.width / 2.0;
        this.image = image;
        this._text = text;
        this.font = font;
        return this.parent(x, y, this.imageTileWidth, image.height);
      },
      draw: function() {
        var textWidth, xOffset;
        this.parent();
        if (this.hovered) {
          this.image.drawTile(this.x, this.y, 1, this.imageTileWidth, this.image.height);
        } else {
          this.image.drawTile(this.x, this.y, 0, this.imageTileWidth, this.image.height);
        }
        textWidth = this.font.widthForString(this._text);
        xOffset = (this.imageTileWidth - textWidth) / 2.0;
        return this.font.draw(this._text, this.x + xOffset, this.y + 2);
      }
    });
  });

}).call(this);
