// Generated by CoffeeScript 1.3.3
(function() {

  ig.module("game.teknosparx.main").requires("impact.game", "game.teknosparx.levels.world", "game.teknosparx.entities.robot", "game.teknosparx.gui").defines(function() {
    var Teknosparx;
    Teknosparx = ig.Game.extend({
      panelBg: new ig.Image("media/teknosparx/tekno_bg.png"),
      researchButtonImg: new ig.Image("media/teknosparx/research_button.png"),
      font: new ig.Font("media/04b03.font.png"),
      init: function() {
        ig.input.bind(ig.KEY.MOUSE1, "primary_button");
        ig.game.loadLevel(LevelWorld);
        ig.game.spawnEntity(Robot, 80, 160);
        return this.guiElements = [new Panel(0, 215, this.panelBg), new Button(40, 220, this.researchButtonImg, "Research:", this.font)];
      },
      update: function() {
        var element, _i, _len, _ref;
        this._mouseIntercepted = false;
        _ref = this.guiElements;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          element = _ref[_i];
          element.update();
        }
        if (!this._mouseIntercepted) {
          if (ig.input.pressed("primary_button")) {
            this.enterDragState();
          }
          if (ig.input.released("primary_button")) {
            this.exitDragState();
          }
        }
        if (this.dragState) {
          ig.game.screen.x = this.firstScreenX + (this.firstMouseDragX - ig.input.mouse.x);
          ig.game.screen.y = this.firstScreenY + (this.firstMouseDragY - ig.input.mouse.y);
          ig.game.screen.x = ig.game.screen.x.limit(0, (75 - 20) * 16);
          ig.game.screen.y = ig.game.screen.y.limit(0, (50 - 15) * 16);
        }
        return this.parent();
      },
      enterDragState: function() {
        this.firstMouseDragX = ig.input.mouse.x;
        this.firstMouseDragY = ig.input.mouse.y;
        this.firstScreenX = ig.game.screen.x;
        this.firstScreenY = ig.game.screen.y;
        return this.dragState = true;
      },
      exitDragState: function() {
        return this.dragState = false;
      },
      mouseIntercepted: function() {
        return this._mouseIntercepted = true;
      },
      draw: function() {
        var element, _i, _len, _ref, _results;
        this.parent();
        _ref = this.guiElements;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          element = _ref[_i];
          _results.push(element.draw());
        }
        return _results;
      }
    });
    return ig.main('#canvas', Teknosparx, 60, 320, 240, 2);
  });

}).call(this);
